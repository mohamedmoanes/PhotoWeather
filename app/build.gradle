apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.mohamedmoanes.photoweather"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "BASE_URL", '"http://api.openweathermap.org/data/2.5/"'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "BASE_URL", '"http://api.openweathermap.org/data/2.5/"'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies { configuration ->
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    androidX(configuration)
    camera(configuration)

    retrofit(configuration)
    rxJava(configuration)

    imageLoader(configuration)
    ImageViewer(configuration)

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
}

private static void androidX(configuration) {
    configuration.implementation 'androidx.appcompat:appcompat:1.1.0'
    configuration.implementation 'androidx.core:core-ktx:1.1.0'
    configuration.implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    configuration.implementation 'com.google.android.material:material:1.1.0'
    configuration.implementation 'com.google.android.gms:play-services-location:17.0.0'
}

private static void camera(configuration) {
    // CameraX core library
    def camerax_version = "1.0.0-alpha09"
    configuration.implementation "androidx.camera:camera-core:$camerax_version"

    // CameraX Camera2 extensions
    configuration.implementation "androidx.camera:camera-camera2:$camerax_version"

    // CameraX Lifecycle library
    configuration.implementation "androidx.camera:camera-lifecycle:1.0.0-alpha03"

    // CameraX View class
    configuration.implementation "androidx.camera:camera-view:1.0.0-alpha06"
}

private static void retrofit(configuration) {

    def retrofit_version = "2.7.0"
    def okhttp_version = "4.2.2"
    configuration.implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    configuration.implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    configuration.implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    configuration.implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    configuration.debugImplementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
}

private static void rxJava(configuration) {
    configuration.implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    configuration.implementation 'io.reactivex.rxjava2:rxjava:2.2.14'
}

private static void imageLoader(configuration) {
    def glide_version = "4.10.0"
    configuration.implementation "com.github.bumptech.glide:glide:$glide_version"
    configuration.annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"
}

private static void ImageViewer(configuration) {
    configuration.implementation 'de.hdodenhof:circleimageview:3.0.0'
}
